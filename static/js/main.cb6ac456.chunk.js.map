{"version":3,"sources":["components/Formuserdetails.js","components/Formpersonaldetails.js","components/confirm.js","components/Success.js","components/Userform.js","App.js","serviceWorker.js","index.js"],"names":["Formuserdetails","check","props","value","email","firstName","lastName","handleValidation","nextStep","this","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","label","primary","style","margin","onClick","Component","FormPersonalDetails","country","city","occupation","back","e","preventDefault","prevStep","continue","List","primaryText","secondaryText","Success","msg","swal","Userform","state","step","setState","input","target","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wTAqDeA,EA/Cf,4MAEKC,MAAM,WACyB,IAAxB,EAAKC,MAAMC,MAAMC,OAAuC,IAA5B,EAAKF,MAAMC,MAAME,WAA0C,IAA3B,EAAKH,MAAMC,MAAMG,SAE5E,EAAKJ,MAAMK,mBAGX,EAAKL,MAAMM,YARxB,uDAYc,IAAD,EAEsBC,KAAKP,MAAzBC,EAFF,EAEEA,MAAMO,EAFR,EAEQA,aACb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAQC,MAAM,uBACd,kBAAC,IAAD,CAAYC,SAAS,wBACrBC,kBAAkB,aAClBC,SAAUL,EAAa,aACvBM,aAAcb,EAAME,YACpB,6BACA,kBAAC,IAAD,CAAYQ,SAAS,uBACrBC,kBAAkB,YAClBC,SAAUL,EAAa,YACvBM,aAAcb,EAAMG,WACpB,6BACA,kBAAC,IAAD,CAAYO,SAAS,mBACrBC,kBAAkB,QAClBC,SAAWL,EAAa,SACxBM,aAAcb,EAAMC,QAEpB,6BACA,kBAAC,IAAD,CACAa,MAAM,WACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAKR,cAvC9B,GAAqCqB,aCuDtBC,EAtDf,4MACItB,MAAM,WAC2B,IAA1B,EAAKC,MAAMC,MAAMqB,SAAoC,IAAvB,EAAKtB,MAAMC,MAAMsB,MAAuC,IAA7B,EAAKvB,MAAMC,MAAMuB,WAEzE,EAAKxB,MAAMK,mBAGX,EAAKL,MAAMM,YAPvB,EAUImB,KAAK,SAAAC,GACDA,EAAEC,iBACF,EAAK3B,MAAM4B,YAZnB,uDAec,IAAD,EACsBrB,KAAKP,MAAzBC,EADF,EACEA,MAAMO,EADR,EACQA,aACb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAQC,MAAM,2BACd,kBAAC,IAAD,CAAYC,SAAS,wBACrBC,kBAAkB,aAClBC,SAAUL,EAAa,cACvBM,aAAcb,EAAMuB,aACpB,6BACA,kBAAC,IAAD,CAAYb,SAAS,uBACrBC,kBAAkB,OAClBC,SAAUL,EAAa,QACvBM,aAAcb,EAAMsB,OACpB,6BACA,kBAAC,IAAD,CAAYZ,SAAS,0BACrBC,kBAAkB,UAClBC,SAAUL,EAAa,WACvBM,aAAcb,EAAMqB,UACpB,6BACA,kBAAC,IAAD,CACAP,MAAM,WACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAKR,QAEd,kBAAC,IAAD,CACAgB,MAAM,OACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAKkB,aA9C9B,GAAyCL,a,QC8D1BC,EA9Df,4MACIQ,SAAS,SAAAH,GACLA,EAAEC,iBAEF,EAAK3B,MAAMM,YAJnB,EAMImB,KAAK,SAAAC,GACDA,EAAEC,iBACF,EAAK3B,MAAM4B,YARnB,uDAWc,IAAD,EAC4DrB,KAAKP,MAA/DC,MAAOE,EADT,EACSA,UAAUC,EADnB,EACmBA,SAASF,EAD5B,EAC4BA,MAAMsB,EADlC,EACkCA,WAAWD,EAD7C,EAC6CA,KAAKD,EADlD,EACkDA,QACvD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMb,SAAP,KACA,kBAAC,IAAD,CAAQC,MAAM,sBACd,8BACI,kBAACoB,EAAA,SAAD,CACIC,YAAY,aACZC,cAAe7B,IAGnB,kBAAC2B,EAAA,SAAD,CACIC,YAAY,YACZC,cAAe5B,IAEnB,kBAAC0B,EAAA,SAAD,CACIC,YAAY,QACZC,cAAe9B,IAEnB,kBAAC4B,EAAA,SAAD,CACIC,YAAY,aACZC,cAAeR,IAEnB,kBAACM,EAAA,SAAD,CACIC,YAAY,OACZC,cAAeT,IAEnB,kBAACO,EAAA,SAAD,CACIC,YAAY,UACZC,cAAeV,KAGvB,kBAAC,IAAD,CACAP,MAAM,oBACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAKsB,WAEd,kBAAC,IAAD,CACAd,MAAM,OACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAKkB,aAtD9B,GAAyCL,a,iBCsB1Ba,EAxBf,4MAEIC,IAAI,WACAC,IAAK,YAAY,yBAAyB,YAHlD,uDAKc,IAAD,EACqB5B,KAAKP,MAD1B,EACCC,MADD,EACOO,aACZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAQC,MAAM,2BACd,6DACA,6BACA,kBAAC,IAAD,CACAK,MAAM,SACNC,SAAS,EACTC,MAAO,CAACC,OAAO,IACfC,QAASZ,KAAK2B,YAjB9B,GAA6Bd,aCChBgB,EAAb,4MACIC,MAAM,CACFC,KAAK,EACLnC,UAAU,GACVC,SAAS,GACTF,MAAO,GACPsB,WAAW,GACXD,KAAK,GACLD,QAAQ,IARhB,EAUIhB,SAAS,WAAK,IACHgC,EAAM,EAAKD,MAAXC,KACP,EAAKC,SAAS,CAACD,KAAKA,EAAK,KAZjC,EAeIV,SAAS,WAAK,IACHU,EAAM,EAAKD,MAAXC,KACP,EAAKC,SAAS,CAACD,KAAKA,EAAK,KAjBjC,EAoBI9B,aAAa,SAACgC,GAAD,OAAS,SAAAd,GACd,EAAKa,SAAL,eAAgBC,EAAOd,EAAEe,OAAOxC,UArB5C,EAwBII,iBAAiB,WACT8B,IAAK,SAAS,sBAAsB,UAzBhD,uDA4Bc,IACAG,EAAM/B,KAAK8B,MAAXC,KADD,EAEmD/B,KAAK8B,MACvDpC,EAAM,CAACE,UAHR,EAECA,UACiBC,SAHlB,EAEWA,SACgBF,MAH3B,EAEoBA,MACasB,WAHjC,EAE0BA,WACkBF,QAH5C,EAEqCA,QACeC,KAHpD,EAE6CA,MAElD,OAAOe,GACH,KAAK,EACD,OACI,kBAAC,EAAD,CAAiBhC,SAAUC,KAAKD,SAChCD,iBAAkBE,KAAKF,iBACvBG,aAAcD,KAAKC,aACnBP,MAAOA,IAEf,KAAK,EACD,OACI,kBAAC,EAAD,CAAqBK,SAAUC,KAAKD,SACpCsB,SAAUrB,KAAKqB,SACfvB,iBAAkBE,KAAKF,iBACvBG,aAAcD,KAAKC,aACnBP,MAAOA,IAEf,KAAK,EACD,OACI,kBAAC,EAAD,CACAK,SAAUC,KAAKD,SACfsB,SAAUrB,KAAKqB,SACf3B,MAAOA,IAEf,KAAK,EACD,OAAO,kBAAC,EAAD,WAxDvB,GAA8BmB,aCMfsB,MARf,WACE,OACE,yBAAKC,UAAU,OACf,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.cb6ac456.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class Formuserdetails extends Component {\r\n   \r\n     check=()=>{\r\n         if(this.props.value.email==''||this.props.value.firstName==''||this.props.value.lastName=='')\r\n         {\r\n             this.props.handleValidation()\r\n         }\r\n         else{\r\n             this.props.nextStep();\r\n         }\r\n     }\r\n\r\n    render() {\r\n\r\n        const {value,handleChange}=this.props\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                <AppBar title=\"Enter User Details\" />\r\n                <TextField  hintText=\"Enter Your First Name\"\r\n                floatingLabelText=\"First Name\"\r\n                onChange={handleChange('firstName')} \r\n                defaultValue={value.firstName} />\r\n                <br />\r\n                <TextField  hintText=\"Enter Your Last Name\"\r\n                floatingLabelText=\"Last Name\"\r\n                onChange={handleChange('lastName')} \r\n                defaultValue={value.lastName} />\r\n                <br />\r\n                <TextField  hintText=\"Enter Your Email\"\r\n                floatingLabelText=\"Email\"\r\n                onChange ={handleChange('email')} \r\n                defaultValue={value.email} />\r\n                \r\n                <br />\r\n                <RaisedButton\r\n                label=\"Continue\"\r\n                primary={true}\r\n                style={{margin:15}}\r\n                onClick={this.check} />\r\n\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formuserdetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\n\r\nexport class FormPersonalDetails extends Component {\r\n    check=()=>{\r\n        if(this.props.value.country==''||this.props.value.city==''||this.props.value.occupation=='')\r\n        {\r\n            this.props.handleValidation()\r\n        }\r\n        else{\r\n            this.props.nextStep();\r\n        }\r\n    }\r\n    back=e=>{\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    \r\n    render() {\r\n        const {value,handleChange}=this.props\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                <AppBar title=\"Enter Personal Details\" />\r\n                <TextField  hintText=\"Enter Your Occupation\"\r\n                floatingLabelText=\"Occupation\"\r\n                onChange={handleChange('occupation')} \r\n                defaultValue={value.occupation} />\r\n                <br />\r\n                <TextField  hintText=\"Enter Your City name\"\r\n                floatingLabelText=\"City\"\r\n                onChange={handleChange('city')} \r\n                defaultValue={value.city} />\r\n                <br />\r\n                <TextField  hintText=\"Enter Your Country name\"\r\n                floatingLabelText=\"Country\"\r\n                onChange={handleChange('country') } \r\n                defaultValue={value.country} />\r\n                <br />\r\n                <RaisedButton\r\n                label=\"Continue\"\r\n                primary={true}\r\n                style={{margin:15}}\r\n                onClick={this.check} />\r\n                \r\n                <RaisedButton\r\n                label=\"Back\"\r\n                primary={false}\r\n                style={{margin:15}}\r\n                onClick={this.back} />\r\n\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport {List,ListItem} from 'material-ui/List';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport list from 'material-ui/List';\r\n\r\nexport class FormPersonalDetails extends Component {\r\n    continue=e=>{\r\n        e.preventDefault()\r\n        //procees form on backend\r\n        this.props.nextStep();\r\n    }\r\n    back=e=>{\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    \r\n    render() {\r\n        const {value:{firstName,lastName,email,occupation,city,country}}=this.props\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                <AppBar title=\"Confirm User Data\" />\r\n                <list>\r\n                    <ListItem\r\n                        primaryText=\"First Name\"\r\n                        secondaryText={firstName}\r\n                    />\r\n                    \r\n                    <ListItem\r\n                        primaryText=\"Last Name\"\r\n                        secondaryText={lastName}\r\n                    />\r\n                    <ListItem\r\n                        primaryText=\"Email\"\r\n                        secondaryText={email}\r\n                    />\r\n                    <ListItem\r\n                        primaryText=\"Occupation\"\r\n                        secondaryText={occupation}\r\n                    />\r\n                    <ListItem\r\n                        primaryText=\"City\"\r\n                        secondaryText={city}\r\n                    />\r\n                    <ListItem\r\n                        primaryText=\"Country\"\r\n                        secondaryText={country}\r\n                    />\r\n                </list>\r\n                <RaisedButton\r\n                label=\"Confirm &Continue\"\r\n                primary={true}\r\n                style={{margin:15}}\r\n                onClick={this.continue} />\r\n                \r\n                <RaisedButton\r\n                label=\"Back\"\r\n                primary={false}\r\n                style={{margin:15}}\r\n                onClick={this.back} />\r\n\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';    \r\nimport swal from 'sweetalert' ;          \r\nimport RaisedButton from 'material-ui/RaisedButton';                                                                                                                                                                                                                                                       \r\nexport class Success extends Component {\r\n\r\n    msg=()=>{\r\n        swal(\"Good job!\",\"Your Form is Submitted\",\"success\")\r\n    }\r\n    render() {\r\n       const {value,handleChange}=this.props\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                <AppBar title=\"Enter Personal Details\" />\r\n                <h1>Thank You For Your Submission</h1>\r\n                <br />\r\n                <RaisedButton\r\n                label=\"Submit\"\r\n                primary={true}\r\n                style={{margin:15}}\r\n                onClick={this.msg} />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Success\r\n","import React, { Component } from 'react'\r\nimport FormUserDetails from './Formuserdetails'\r\nimport FormPersonalDetails from './Formpersonaldetails'\r\nimport Confirm from './confirm'\r\nimport Success from './Success'\r\nimport swal from 'sweetalert'\r\nexport class Userform extends Component {\r\n    state={\r\n        step:1,\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email :\"\",\r\n        occupation:\"\",\r\n        city:\"\",\r\n        country:\"\"\r\n    }\r\n    nextStep=()=>{\r\n        const {step}=this.state\r\n        this.setState({step:step+1})\r\n    }\r\n    \r\n    prevStep=()=>{\r\n        const {step}=this.state\r\n        this.setState({step:step-1})\r\n    }\r\n\r\n    handleChange=(input)=>e=>{\r\n            this.setState({[input]:e.target.value})     \r\n    }\r\n    \r\n    handleValidation=()=>{\r\n            swal(\"Error!\",\"Invalid Information\",\"error\")\r\n    } \r\n     \r\n    render() {\r\n        const{step}=this.state;\r\n        const{firstName,lastName,email,occupation,country,city}=this.state;\r\n        const value={firstName,lastName,email,occupation,country,city}\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <FormUserDetails nextStep={this.nextStep}\r\n                    handleValidation={this.handleValidation}\r\n                    handleChange={this.handleChange}\r\n                    value={value} />\r\n                )\r\n            case 2:\r\n                return(\r\n                    <FormPersonalDetails nextStep={this.nextStep}\r\n                    prevStep={this.prevStep}\r\n                    handleValidation={this.handleValidation}\r\n                    handleChange={this.handleChange}\r\n                    value={value} />\r\n                )\r\n            case 3:\r\n                return(\r\n                    <Confirm\r\n                    nextStep={this.nextStep}\r\n                    prevStep={this.prevStep}\r\n                    value={value} />\r\n                )\r\n            case 4:\r\n                return <Success />    \r\n        }\r\n    }\r\n}\r\n\r\nexport default Userform\r\n","import React from 'react';\nimport './App.css';\nimport {Userform} from './components/Userform';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Userform />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}